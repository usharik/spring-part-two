@REM ----------------------------------------------------------------------------
@REM LICENSED TO THE APACHE SOFTWARE FOUNDATION (ASF) UNDER ONE
@REM OR MORE CONTRIBUTOR LICENSE AGREEMENTS.  SEE THE NOTICE FILE
@REM DISTRIBUTED WITH THIS WORK FOR ADDITIONAL INFORMATION
@REM REGARDING COPYRIGHT OWNERSHIP.  THE ASF LICENSES THIS FILE
@REM TO YOU UNDER THE APACHE LICENSE, VERSION 2.0 (THE
@REM "LICENSE"); YOU MAY NOT USE THIS FILE EXCEPT IN COMPLIANCE
@REM WITH THE LICENSE.  YOU MAY OBTAIN A COPY OF THE LICENSE AT
@REM
@REM    HTTPS://WWW.APACHE.ORG/LICENSES/LICENSE-2.0
@REM
@REM UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING,
@REM SOFTWARE DISTRIBUTED UNDER THE LICENSE IS DISTRIBUTED ON AN
@REM "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
@REM KIND, EITHER EXPRESS OR IMPLIED.  SEE THE LICENSE FOR THE
@REM SPECIFIC LANGUAGE GOVERNING PERMISSIONS AND LIMITATIONS
@REM UNDER THE LICENSE.
@REM ----------------------------------------------------------------------------

@REM ----------------------------------------------------------------------------
@REM MAVEN START UP BATCH SCRIPT
@REM
@REM REQUIRED ENV VARS:
@REM JAVA_HOME - LOCATION OF A JDK HOME DIR
@REM
@REM OPTIONAL ENV VARS
@REM M2_HOME - LOCATION OF MAVEN2'S INSTALLED HOME DIR
@REM MAVEN_BATCH_ECHO - SET TO 'ON' TO ENABLE THE ECHOING OF THE BATCH COMMANDS
@REM MAVEN_BATCH_PAUSE - SET TO 'ON' TO WAIT FOR A KEYSTROKE BEFORE ENDING
@REM MAVEN_OPTS - PARAMETERS PASSED TO THE JAVA VM WHEN RUNNING MAVEN
@REM     E.G. TO DEBUG MAVEN ITSELF, USE
@REM SET MAVEN_OPTS=-XDEBUG -XRUNJDWP:TRANSPORT=DT_SOCKET,SERVER=Y,SUSPEND=Y,ADDRESS=8000
@REM MAVEN_SKIP_RC - FLAG TO DISABLE LOADING OF MAVENRC FILES
@REM ----------------------------------------------------------------------------

@REM BEGIN ALL REM LINES WITH '@' IN CASE MAVEN_BATCH_ECHO IS 'ON'
@ECHO OFF
@REM SET TITLE OF COMMAND WINDOW
TITLE %0
@REM ENABLE ECHOING BY SETTING MAVEN_BATCH_ECHO TO 'ON'
@IF "%MAVEN_BATCH_ECHO%" == "ON"  ECHO %MAVEN_BATCH_ECHO%

@REM SET %HOME% TO EQUIVALENT OF $HOME
IF "%HOME%" == "" (SET "HOME=%HOMEDRIVE%%HOMEPATH%")

@REM EXECUTE A USER DEFINED SCRIPT BEFORE THIS ONE
IF NOT "%MAVEN_SKIP_RC%" == "" GOTO SKIPRCPRE
@REM CHECK FOR PRE SCRIPT, ONCE WITH LEGACY .BAT ENDING AND ONCE WITH .CMD ENDING
IF EXIST "%HOME%\MAVENRC_PRE.BAT" CALL "%HOME%\MAVENRC_PRE.BAT"
IF EXIST "%HOME%\MAVENRC_PRE.CMD" CALL "%HOME%\MAVENRC_PRE.CMD"
:SKIPRCPRE

@SETLOCAL

SET ERROR_CODE=0

@REM TO ISOLATE INTERNAL VARIABLES FROM POSSIBLE POST SCRIPTS, WE USE ANOTHER SETLOCAL
@SETLOCAL

@REM ==== START VALIDATION ====
IF NOT "%JAVA_HOME%" == "" GOTO OKJHOME

ECHO.
ECHO ERROR: JAVA_HOME NOT FOUND IN YOUR ENVIRONMENT. >&2
ECHO PLEASE SET THE JAVA_HOME VARIABLE IN YOUR ENVIRONMENT TO MATCH THE >&2
ECHO LOCATION OF YOUR JAVA INSTALLATION. >&2
ECHO.
GOTO ERROR

:OKJHOME
IF EXIST "%JAVA_HOME%\BIN\JAVA.EXE" GOTO INIT

ECHO.
ECHO ERROR: JAVA_HOME IS SET TO AN INVALID DIRECTORY. >&2
ECHO JAVA_HOME = "%JAVA_HOME%" >&2
ECHO PLEASE SET THE JAVA_HOME VARIABLE IN YOUR ENVIRONMENT TO MATCH THE >&2
ECHO LOCATION OF YOUR JAVA INSTALLATION. >&2
ECHO.
GOTO ERROR

@REM ==== END VALIDATION ====

:INIT

@REM FIND THE PROJECT BASE DIR, I.E. THE DIRECTORY THAT CONTAINS THE FOLDER ".MVN".
@REM FALLBACK TO CURRENT WORKING DIRECTORY IF NOT FOUND.

SET MAVEN_PROJECTBASEDIR=%MAVEN_BASEDIR%
IF NOT "%MAVEN_PROJECTBASEDIR%"=="" GOTO ENDDETECTBASEDIR

SET EXEC_DIR=%CD%
SET WDIR=%EXEC_DIR%
:FINDBASEDIR
IF EXIST "%WDIR%"\.MVN GOTO BASEDIRFOUND
CD ..
IF "%WDIR%"=="%CD%" GOTO BASEDIRNOTFOUND
SET WDIR=%CD%
GOTO FINDBASEDIR

:BASEDIRFOUND
SET MAVEN_PROJECTBASEDIR=%WDIR%
CD "%EXEC_DIR%"
GOTO ENDDETECTBASEDIR

:BASEDIRNOTFOUND
SET MAVEN_PROJECTBASEDIR=%EXEC_DIR%
CD "%EXEC_DIR%"

:ENDDETECTBASEDIR

IF NOT EXIST "%MAVEN_PROJECTBASEDIR%\.MVN\JVM.CONFIG" GOTO ENDREADADDITIONALCONFIG

@SETLOCAL ENABLEEXTENSIONS ENABLEDELAYEDEXPANSION
FOR /F "USEBACKQ DELIMS=" %%A IN ("%MAVEN_PROJECTBASEDIR%\.MVN\JVM.CONFIG") DO SET JVM_CONFIG_MAVEN_PROPS=!JVM_CONFIG_MAVEN_PROPS! %%A
@ENDLOCAL & SET JVM_CONFIG_MAVEN_PROPS=%JVM_CONFIG_MAVEN_PROPS%

:ENDREADADDITIONALCONFIG

SET MAVEN_JAVA_EXE="%JAVA_HOME%\BIN\JAVA.EXE"
SET WRAPPER_JAR="%MAVEN_PROJECTBASEDIR%\.MVN\WRAPPER\MAVEN-WRAPPER.JAR"
SET WRAPPER_LAUNCHER=ORG.APACHE.MAVEN.WRAPPER.MAVENWRAPPERMAIN

SET DOWNLOAD_URL="HTTPS://REPO.MAVEN.APACHE.ORG/MAVEN2/IO/TAKARI/MAVEN-WRAPPER/0.5.6/MAVEN-WRAPPER-0.5.6.JAR"

FOR /F "TOKENS=1,2 DELIMS==" %%A IN ("%MAVEN_PROJECTBASEDIR%\.MVN\WRAPPER\MAVEN-WRAPPER.PROPERTIES") DO (
    IF "%%A"=="WRAPPERURL" SET DOWNLOAD_URL=%%B
)

@REM EXTENSION TO ALLOW AUTOMATICALLY DOWNLOADING THE MAVEN-WRAPPER.JAR FROM MAVEN-CENTRAL
@REM THIS ALLOWS USING THE MAVEN WRAPPER IN PROJECTS THAT PROHIBIT CHECKING IN BINARY DATA.
IF EXIST %WRAPPER_JAR% (
    IF "%MVNW_VERBOSE%" == "TRUE" (
        ECHO FOUND %WRAPPER_JAR%
    )
) ELSE (
    IF NOT "%MVNW_REPOURL%" == "" (
        SET DOWNLOAD_URL="%MVNW_REPOURL%/IO/TAKARI/MAVEN-WRAPPER/0.5.6/MAVEN-WRAPPER-0.5.6.JAR"
    )
    IF "%MVNW_VERBOSE%" == "TRUE" (
        ECHO COULDN'T FIND %WRAPPER_JAR%, DOWNLOADING IT ...
        ECHO DOWNLOADING FROM: %DOWNLOAD_URL%
    )

    POWERSHELL -COMMAND "&{"^
		"$WEBCLIENT = NEW-OBJECT SYSTEM.NET.WEBCLIENT;"^
		"IF (-NOT ([STRING]::ISNULLOREMPTY('%MVNW_USERNAME%') -AND [STRING]::ISNULLOREMPTY('%MVNW_PASSWORD%'))) {"^
		"$WEBCLIENT.CREDENTIALS = NEW-OBJECT SYSTEM.NET.NETWORKCREDENTIAL('%MVNW_USERNAME%', '%MVNW_PASSWORD%');"^
		"}"^
		"[NET.SERVICEPOINTMANAGER]::SECURITYPROTOCOL = [NET.SECURITYPROTOCOLTYPE]::TLS12; $WEBCLIENT.DOWNLOADFILE('%DOWNLOAD_URL%', '%WRAPPER_JAR%')"^
		"}"
    IF "%MVNW_VERBOSE%" == "TRUE" (
        ECHO FINISHED DOWNLOADING %WRAPPER_JAR%
    )
)
@REM END OF EXTENSION

@REM PROVIDE A "STANDARDIZED" WAY TO RETRIEVE THE CLI ARGS THAT WILL
@REM WORK WITH BOTH WINDOWS AND NON-WINDOWS EXECUTIONS.
SET MAVEN_CMD_LINE_ARGS=%*

%MAVEN_JAVA_EXE% %JVM_CONFIG_MAVEN_PROPS% %MAVEN_OPTS% %MAVEN_DEBUG_OPTS% -CLASSPATH %WRAPPER_JAR% "-DMAVEN.MULTIMODULEPROJECTDIRECTORY=%MAVEN_PROJECTBASEDIR%" %WRAPPER_LAUNCHER% %MAVEN_CONFIG% %*
IF ERRORLEVEL 1 GOTO ERROR
GOTO END

:ERROR
SET ERROR_CODE=1

:END
@ENDLOCAL & SET ERROR_CODE=%ERROR_CODE%

IF NOT "%MAVEN_SKIP_RC%" == "" GOTO SKIPRCPOST
@REM CHECK FOR POST SCRIPT, ONCE WITH LEGACY .BAT ENDING AND ONCE WITH .CMD ENDING
IF EXIST "%HOME%\MAVENRC_POST.BAT" CALL "%HOME%\MAVENRC_POST.BAT"
IF EXIST "%HOME%\MAVENRC_POST.CMD" CALL "%HOME%\MAVENRC_POST.CMD"
:SKIPRCPOST

@REM PAUSE THE SCRIPT IF MAVEN_BATCH_PAUSE IS SET TO 'ON'
IF "%MAVEN_BATCH_PAUSE%" == "ON" PAUSE

IF "%MAVEN_TERMINATE_CMD%" == "ON" EXIT %ERROR_CODE%

EXIT /B %ERROR_CODE%
